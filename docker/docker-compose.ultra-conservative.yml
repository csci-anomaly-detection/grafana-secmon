version: '3.8'

# ULTRA-CONSERVATIVE Same Server Deployment
# Maximum protection for Suricata monitoring server
# Use this if you want the most restrictive resource limits

services:
  loki:
    image: grafana/loki:3.0.0
    container_name: loki-secmon
    ports:
      - "3100:3100"
    volumes:
      - ../loki-data:/loki
      - ../config/loki-config-minimal.yml:/etc/loki/local-config.yaml:ro
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - secmon-logging
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M      # Doubled from 256MB - still conservative
          cpus: '0.5'       # Half CPU core - minimal increase
        reservations:
          memory: 256M      # Doubled minimum
          cpus: '0.2'       # 20% CPU minimum
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 60s         # Slightly more frequent checks
      timeout: 10s          # Increased timeout for queries
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"     # Limit log file size
        max-file: "2"

  grafana:
    image: grafana/grafana:10.4.0
    container_name: grafana-secmon
    ports:
      - "3000:3000"
    volumes:
      - ../grafana-data:/var/lib/grafana
      - ../config/grafana-minimal.ini:/etc/grafana/grafana.ini:ro
      - ../datasources:/etc/grafana/provisioning/datasources:ro
      - ../dashboards:/etc/grafana/provisioning/dashboards:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=secmon_admin_2025
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_LOG_LEVEL=error             # Minimal logging
      - GF_ALERTING_ENABLED=false      # Disable alerting
      - GF_UNIFIED_ALERTING_ENABLED=false
      - GF_EXPLORE_ENABLED=true
    networks:
      - secmon-logging
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 384M      # Modest increase from 256MB
          cpus: '0.4'       # 40% CPU core - still conservative
        reservations:
          memory: 192M      # Increased minimum
          cpus: '0.15'      # 15% CPU minimum
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 60s         # More frequent than before
      timeout: 10s          # Increased timeout
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"
    depends_on:
      loki:
        condition: service_healthy

  promtail:
    image: grafana/promtail:3.0.0
    container_name: promtail-secmon
    volumes:
      - ../config/promtail-config.yml:/etc/promtail/config.yml:ro
      - /srv/campus-sim/ai-sec-monitor/logs:/var/log/campus-sim:ro  # Real Suricata logs
      - /srv/campus-sim/logs:/var/log/campus-sim-alt:ro  # Alternative log location for eve.json
      - /srv/campus-sim/ai-sec-monitor/logs/zeek:/var/log/campus-sim/zeek:ro  # Zeek logs from ai-sec-monitor
    command: -config.file=/etc/promtail/config.yml
    networks:
      - secmon-logging
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M      # Minimal memory for log shipping
          cpus: '0.15'      # Very light CPU usage
        reservations:
          memory: 64M
          cpus: '0.05'
    logging:
      driver: "json-file"
      options:
        max-size: "5m"      # Even smaller logs
        max-file: "1"
    depends_on:
      loki:
        condition: service_healthy

  # Zeek is running separately in ai-sec-monitor infrastructure

networks:
  secmon-logging:
    driver: bridge

# No named volumes - use bind mounts for easier monitoring
volumes: {}
